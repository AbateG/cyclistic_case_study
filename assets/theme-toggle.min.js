let currentTheme=localStorage.getItem("theme")||"dark";let themeToggleBtn=null;function initTheme(){document.documentElement.setAttribute("data-theme",currentTheme);if(!document.getElementById("theme-toggle")){createThemeToggle()}updateThemeToggleButton()}function createThemeToggle(){const toggleContainer=document.createElement("div");toggleContainer.id="theme-toggle-container";toggleContainer.style.cssText=`\n        position: fixed;\n        top: 20px;\n        right: 20px;\n        z-index: 1000;\n    `;const toggleBtn=document.createElement("button");toggleBtn.id="theme-toggle";toggleBtn.innerHTML=currentTheme==="dark"?"‚òÄÔ∏è":"üåô";toggleBtn.style.cssText=`\n        background: var(--primary-500);\n        color: white;\n        border: none;\n        border-radius: 50%;\n        width: 50px;\n        height: 50px;\n        font-size: 20px;\n        cursor: pointer;\n        box-shadow: var(--shadow-lg);\n        transition: all 0.3s ease;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    `;toggleBtn.addEventListener("click",toggleTheme);toggleBtn.addEventListener("mouseenter",()=>{toggleBtn.style.transform="scale(1.1)";toggleBtn.style.boxShadow="var(--shadow-xl)"});toggleBtn.addEventListener("mouseleave",()=>{toggleBtn.style.transform="scale(1)";toggleBtn.style.boxShadow="var(--shadow-lg)"});toggleContainer.appendChild(toggleBtn);document.body.appendChild(toggleContainer);themeToggleBtn=toggleBtn}function toggleTheme(){currentTheme=currentTheme==="dark"?"light":"dark";document.documentElement.setAttribute("data-theme",currentTheme);localStorage.setItem("theme",currentTheme);updateThemeToggleButton();document.body.style.transition="background-color 0.3s ease, color 0.3s ease";setTimeout(()=>{document.body.style.transition=""},300);if(typeof Plotly!=="undefined"){updateChartThemes()}}function updateThemeToggleButton(){if(themeToggleBtn){themeToggleBtn.innerHTML=currentTheme==="dark"?"‚òÄÔ∏è":"üåô";themeToggleBtn.title=`Switch to ${currentTheme==="dark"?"light":"dark"} theme`}}function updateChartThemes(){const charts=document.querySelectorAll('[class*="chart"], [id*="chart"]');charts.forEach(chart=>{if(chart._fullLayout){const isDark=currentTheme==="dark";const bgColor=isDark?"rgba(0,0,0,0)":"rgba(255,255,255,0.9)";const textColor=isDark?"#ffffff":"#2c3e50";const gridColor=isDark?"rgba(255,255,255,0.1)":"rgba(0,0,0,0.1)";try{Plotly.relayout(chart,{paper_bgcolor:bgColor,plot_bgcolor:bgColor,"font.color":textColor,"xaxis.gridcolor":gridColor,"yaxis.gridcolor":gridColor,"xaxis.linecolor":gridColor,"yaxis.linecolor":gridColor,"xaxis.tickcolor":textColor,"yaxis.tickcolor":textColor,"xaxis.tickfont.color":textColor,"yaxis.tickfont.color":textColor})}catch(e){console.log("Chart theme update skipped:",e.message)}}})}function initScrollAnimations(){const observerOptions={threshold:.1,rootMargin:"0px 0px -50px 0px"};const observer=new IntersectionObserver(entries=>{entries.forEach(entry=>{if(entry.isIntersecting){entry.target.classList.add("animate-in")}})},observerOptions);document.querySelectorAll("section, .card, .metric-card, .chart-container").forEach(el=>{observer.observe(el)})}function initSmoothScrolling(){document.querySelectorAll('a[href^="#"]').forEach(anchor=>{anchor.addEventListener("click",function(e){e.preventDefault();const target=document.querySelector(this.getAttribute("href"));if(target){target.scrollIntoView({behavior:"smooth",block:"start"})}})})}function showLoading(elementId,message="Loading..."){const element=document.getElementById(elementId);if(element){element.innerHTML=`\n            <div class="loading-container">\n                <div class="loading-spinner"></div>\n                <p>${message}</p>\n            </div>\n        `;element.classList.add("loading")}}function hideLoading(elementId){const element=document.getElementById(elementId);if(element){element.classList.remove("loading")}}function showError(elementId,message,retryCallback=null){const element=document.getElementById(elementId);if(element){element.innerHTML=`\n            <div class="error-container">\n                <div class="error-icon">‚ö†Ô∏è</div>\n                <p class="error-message">${message}</p>\n                ${retryCallback?'<button class="retry-btn" onclick="retryCallback()">Retry</button>':""}\n            </div>\n        `;element.classList.add("error")}}function hideError(elementId){const element=document.getElementById(elementId);if(element){element.classList.remove("error")}}function initMobileOptimizations(){const mobileMenuBtn=document.getElementById("mobile-menu-btn");const navMenu=document.querySelector(".nav-menu");if(mobileMenuBtn&&navMenu){mobileMenuBtn.addEventListener("click",()=>{navMenu.classList.toggle("mobile-open")})}if("ontouchstart"in window){document.querySelectorAll(".chart-container").forEach(container=>{container.addEventListener("touchstart",e=>{e.preventDefault()},{passive:false})})}function adjustChartsForMobile(){if(window.innerWidth<768){document.querySelectorAll(".chart-container").forEach(container=>{container.style.height="300px"})}else{document.querySelectorAll(".chart-container").forEach(container=>{container.style.height="400px"})}}window.addEventListener("resize",adjustChartsForMobile);adjustChartsForMobile()}function initPerformanceMonitoring(){const chartLoadTimes=new Map;const originalNewPlot=Plotly.newPlot;Plotly.newPlot=function(...args){const startTime=performance.now();const result=originalNewPlot.apply(this,args);const endTime=performance.now();const chartId=args[0];chartLoadTimes.set(chartId,endTime-startTime);console.log(`Chart ${chartId} loaded in ${endTime-startTime}ms`);return result};window.addEventListener("load",()=>{const loadTime=performance.now();console.log(`Page loaded in ${loadTime}ms`);chartLoadTimes.forEach((time,chartId)=>{if(time>1e3){console.warn(`Slow chart: ${chartId} took ${time}ms to load`)}})})}document.addEventListener("DOMContentLoaded",function(){initTheme();initScrollAnimations();initSmoothScrolling();initMobileOptimizations();if(window.location.hostname==="localhost"||window.location.hostname==="127.0.0.1"){initPerformanceMonitoring()}});